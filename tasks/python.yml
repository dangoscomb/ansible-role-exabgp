---
- name: "install and configure python3"
  block:
  - name: Redhat | Enable EPEL rpm repo
    package:
      name: epel-release
      state: present
    when: (ansible_os_family == 'RedHat' and ansible_distribution_major_version == "7")
    
  - name: set python package list
    set_fact:
      package_list: ['python3', 'python3-libs', 'python3-devel', 'python3-pip']
    when: (ansible_os_family == 'RedHat' and ansible_distribution_major_version == "7")

  - name: set python package list
    set_fact:
      package_list: ['python3', 'python3-pip']
    when: (ansible_os_family == 'RedHat' and ansible_distribution_major_version == "8") or (ansible_os_family == 'Debian')

  - name: "python3: install packages"
    become: true
    package:
      name: "{{ package_list }}"
      state: present

  - name: "python3: get python executable"
    command: "which {{ python3_command }}"
    register: python3_which
    changed_when: False
    when: (ansible_os_family == 'RedHat' and ansible_distribution_major_version == "8") or (ansible_os_family == 'Debian')

  - name: "python3: install pip"
    become: true
    command: "{{ python3_command }} -m ensurepip"
    when: ansible_os_family == 'RedHat'
    changed_when: False

  - name: "python3: link executable"
    become: true
    file:
      src: "{{ python3_which.stdout }}"
      dest: "{{ python3_which.stdout|dirname }}/python3"
      state: link
    when:
    - (ansible_os_family == 'RedHat' and ansible_distribution_major_version > "7")
    - python3_pyenv == None
    - not ansible_check_mode

  - name: "python3: get pip executable"
    shell: "{{ pip3_command }} --version | awk '{print $2}'"
    register: pip_installed_version
    changed_when: false
    check_mode: no

- name: "python3: upgrade pip"
  shell: |
    set -o pipefail
    {{ pip3_command }} install --upgrade pip setuptools wheel
  args:
    executable: /bin/bash
  check_mode: no
  changed_when: false
  when: ansible_os_family == 'Debian'
